openapi: 3.1.0
info:
  title: Auth Service
  description: Authentication and user management
  version: "1.0.0"
paths:
  /api/auth/register:
    post:
      tags: [auth]
      summary: Register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/auth/login:
    post:
      tags: [auth]
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/auth/google:
    post:
      tags: [auth]
      summary: Google Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAuthRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/auth/me:
    get:
      tags: [auth]
      summary: Get Current User Info
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      security:
        - HTTPBearer: []
  /api/users/profile:
    get:
      tags: [users]
      summary: Get User Profile
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      security:
        - HTTPBearer: []
  /api/admin/users:
    get:
      tags: [admin]
      summary: Get All Users
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      security:
        - HTTPBearer: []
  /api/health:
    get:
      summary: Health Check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    GoogleAuthRequest:
      type: object
      required: [token]
      properties:
        token:
          type: string
    TokenResponse:
      type: object
      required: [access_token, user]
      properties:
        access_token:
          type: string
        token_type:
          type: string
          default: bearer
        user:
          type: object
    UserCreate:
      type: object
      required: [email, full_name, password]
      properties:
        email:
          type: string
          format: email
        full_name:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    UserResponse:
      type: object
      required: [email, full_name, id]
      properties:
        email:
          type: string
          format: email
        full_name:
          type: string
        id:
          type: string
        is_admin:
          type: boolean
          default: false
    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    ValidationError:
      type: object
      required: [loc, msg, type]
      properties:
        loc:
          type: array
          items:
            oneOf:
              - type: string
              - type: integer
        msg:
          type: string
        type:
          type: string
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
